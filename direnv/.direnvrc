# layout a particular venv by path
layout_virtualenv() {
  local venv_path="$1"
  source ${venv_path}/bin/activate
}

# layout a standard location venv by friendlyname
layout_virtualenvwrapper() {
  local venv_path="$HOME/.virtualenvs/$1"
  layout_virtualenv $venv_path
}

# virtualenv deactivate function, lifted from the activate script. this is
# used to unload a virtualenv from the bash subshell direnv uses
deactivate () {
        unset -f pydoc > /dev/null 2>&1
        if ! [ -z "${_OLD_VIRTUAL_PATH:+_}" ]
        then
                PATH="$_OLD_VIRTUAL_PATH"
                export PATH
                unset _OLD_VIRTUAL_PATH
        fi
        if ! [ -z "${_OLD_VIRTUAL_PYTHONHOME+_}" ]
        then
                PYTHONHOME="$_OLD_VIRTUAL_PYTHONHOME"
                export PYTHONHOME
                unset _OLD_VIRTUAL_PYTHONHOME
        fi
        if [ -n "${BASH-}" ] || [ -n "${ZSH_VERSION-}" ]
        then
                hash -r 2> /dev/null
        fi
        if ! [ -z "${_OLD_VIRTUAL_PS1+_}" ]
        then
                PS1="$_OLD_VIRTUAL_PS1"
                export PS1
                unset _OLD_VIRTUAL_PS1
        fi
        unset VIRTUAL_ENV
        if [ ! "${1-}" = "nondestructive" ]
        then
                unset -f deactivate
        fi
}

# layout conda env by name. attempts to pick it off of:
# 1. $1 - manually specified
# 2. current directory name (from OLDPWD, in case we traverse up)
layout_anaconda2() {
  local ACTIVATE="${HOME}/miniconda2/bin/activate"

  if [ -n "$1" ]; then
    # Explicit environment name from layout command.
    local env_name="$1"
    deactivate; source $ACTIVATE ${env_name}
  elif [[ -d ${HOME}/miniconda2/envs/${OLDPWD##*/} ]]; then
    deactivate; source $ACTIVATE "${OLDPWD##*/}"
  fi;
}
